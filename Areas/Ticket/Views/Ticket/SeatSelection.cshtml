<div class="pagetitle">
    <h1>Seat</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
            <li class="breadcrumb-item active">Select Seat</li>
        </ol>
    </nav>
</div>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bus Seat Selection</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <style>
        .seat-container {
            display: grid;
            grid-template-columns: repeat(4, 1fr); /* Adjust the column count */
            gap: 10px; /* Adjust the gap between columns */
            text-align: center;
            justify-content: center;
        }

        .seat {
            width: 60px;
            height: 60px;
            border: 2px solid #3498db;
            background-color: #e0e0e0;
            font-size: 18px;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .selected {
            background-color: #3498db;
            color: #fff;
        }

        .card-footer {
            text-align: center;
        }
    </style>
</head>

<body>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title text-center">Bus Seat Selection</h5>
                    </div>
                    <div class="card-body">
                        <div id="seat-map" class="seat-container">
                            <!-- Seat selection grid will be dynamically generated here -->
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <button class="btn btn-primary" onclick="bookSeats()">Book Selected Seats</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies (Popper.js and jQuery) -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <script>
        // Example data for seat availability
        const availableSeats = [
            { id: 1, row: 1, col: 'A' },
            { id: 2, row: 2, col: 'A' },
            { id: 3, row: 3, col: 'A' },
            { id: 4, row: 4, col: 'A' },
            { id: 5, row: 1, col: 'B' },
            { id: 6, row: 2, col: 'B' },
            { id: 7, row: 3, col: 'B' },
            { id: 8, row: 4, col: 'B' },
            { id: 1, row: 1, col: 'A' },
            { id: 2, row: 2, col: 'A' },
            { id: 3, row: 3, col: 'A' },
            { id: 4, row: 4, col: 'A' },
            { id: 5, row: 1, col: 'B' },
            { id: 6, row: 2, col: 'B' },
            { id: 7, row: 3, col: 'B' },
            { id: 8, row: 4, col: 'B' },
            // ... more seat data ...
        ];

        // Track selected seats
        const selectedSeats = [{ id: 1, row: 1, col: 'A' }, { id: 1, row: 1, col: 'A' }, { id: 1, row: 1, col: 'A' },];

        // Function to dynamically generate the seat map
        function generateSeatMap() {
            const seatMapContainer = document.getElementById('seat-map');
            seatMapContainer.innerHTML = '';

            availableSeats.forEach(seat => {
                const seatElement = document.createElement('div');
                seatElement.className = `seat ${selectedSeats.includes(seat.id) ? 'selected' : ''}`;
                seatElement.id = `seat-${seat.id}`;
                seatElement.innerHTML = `${seat.row}${seat.col}`;
                seatElement.onclick = () => toggleSeatSelection(seat.id);

                seatMapContainer.appendChild(seatElement);
            });
        }

        // Function to toggle seat selection
        function toggleSeatSelection(seatId) {
            const seatIndex = selectedSeats.indexOf(seatId);

            if (seatIndex === -1) {
                // Seat not selected, add to selectedSeats array
                selectedSeats.push(seatId);
            } else {
                // Seat already selected, remove from selectedSeats array
                selectedSeats.splice(seatIndex, 1);
            }

            // Update the seat map display
            generateSeatMap();
        }

        // Function to simulate booking selected seats
        function bookSeats() {
            if (selectedSeats.length === 0) {
                alert('Please select at least one seat.');
                return;
            }

            // In a real-world scenario, this is where you would handle the booking process, send data to the server, etc.
            alert(`Booking seats: ${selectedSeats.join(', ')}`);
        }

        // Generate the initial seat map
        generateSeatMap();
    </script>

</body>

</html>
