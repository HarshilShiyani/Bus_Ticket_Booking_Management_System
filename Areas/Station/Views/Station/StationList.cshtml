@{
    Layout = "_Layout";
}
@using System.Data;
@model DataTable
<div class="pagetitle">
    <h1>Station</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
            <li class="breadcrumb-item active">Station</li>
        </ol>
    </nav>
</div>
<form>
    <div class="input-group mb-2">
        <span class="input-group-text" id="basic-addon1">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
            </svg>
        </span>

        <input type="text" class="form-control" placeholder="Search Station" id="searchstation" />
    </div>
</form>
<div class="card">
    <div class="card-header d-flex justify-content-between">
        <h3 class="text-dark">List of Station</h3>
        <div>
            
            <a type="button" class="btn btn-success btn-add" asp-area="Station" asp-controller="Station" asp-action="StationAddEdit">Add New Station</a>
            
        </div>
      
    </div>
    
    <div class="card-body">

        <div class="table-responsive">

            <table class="table table-striped" id="statiobtable">
                <thead>
                    <tr>
                        <th scope="col">Station Name</th>
                        <th scope="col">Station Location</th>
                        <th scope="auto">Description</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody id="myTable">

                    @if (Model.Rows.Count <= 0)
                    {
                        <tr>
                            <td class="col text-danger text-center">No records</td>
                        </tr>
                    }
                    else
                    {
                        @if (Model.Rows.Count > 0)
                        {
                        <tbody id="myTable">
                                @foreach (DataRow dataRow in Model.Rows)
                                {
                                <tr>
                                    <td>@dataRow["StationName"].ToString()</td>
                                    <td>@dataRow["location"].ToString() </td>
                                    <td>@(dataRow["Description"] != null && !string.IsNullOrWhiteSpace(dataRow["Description"].ToString()) ? dataRow["Description"] : "NA")</td>
                                    <td>
                                        <a type="button" class="btn btn-danger" asp-route-StationID="@Convert.ToInt32(@dataRow["StationID"])" onclick="confirmDelete(@Convert.ToInt32(@dataRow["StationID"]))">Delete</a>
                                        <a type="button" class="btn btn-info" asp-route-StationID="@Convert.ToInt32(@dataRow["StationID"])" asp-area="Station" asp-controller="Station" asp-action="StationAddEdit">Edit</a>
                                    </td>
                                </tr>
                                }
                        </tbody>
                        }

                    }
                </tbody>
            </table>
        </div>
        <div class="row">
            <div class="col">
                <ul class="pagination justify-content-start">
                    Showing @ViewBag.CurrentPage of @ViewBag.TotalPages of 10 entries
                </ul>
            </div>
            <div class="col">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-end">
                        @if (ViewBag.CurrentPage != 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("StationList", new { page = @ViewBag.CurrentPage-1 })">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {

                            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("StationList", new { page = i })">@i</a>
                            </li>
                        }
                        @if (ViewBag.TotalPages != ViewBag.CurrentPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("StationList", new { page = @ViewBag.CurrentPage+1 })">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }

                    </ul>
                </nav>
            </div>
        </div>


    </div>
</div>
@section Scripts {
    <script>
        function confirmDelete(parameter) {
            event.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with deletion
                    $.ajax({
                        url: "@Url.Action("StationDelete", "Station")" + "?&StationID=" + parameter,
                        type: "POST",
                        success: function (result) {
                            // Use SweetAlert to show a success message
                            Swal.fire({
                                title: "Deleted!",
                                text: "The Station has been deleted.",
                                icon: "success",
                            }).then(() => {
                                // Redirect to the CityList action
                                window.location.href = "@Url.Action("StationList", "Station")";
                            });
                        },
                        error: function () {
                            // Use SweetAlert to show an error message
                            Swal.fire({
                                title: "Error",
                                text: "An error occurred while deleting the Station.",
                                icon: "error",
                            });
                        },
                    });
                }
            });
        }
    </script>

    <script>
        $(document).ready(function () {
            $("#searchstation").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#statiobtable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}