@{
    Layout = "_Layout";
}
@using System.Data;
@model Tuple<DataTable, DataTable,Bus_Ticket_Booking_Management_System.Areas.Routes.Models.RouteStationModel>
<div class="container">
    <div class="pagetitle">
        <h1>Routes</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
                <li class="breadcrumb-item active">Routes</li>
            </ol>
        </nav>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between">
            <h3>Routes Detail</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Route Name</th>
                            <th>Starting Time</th>
                            <th>Source</th>
                            <th>Destination</th>
                            <th>Starting Date</th>
                            <th>Ending Date</th>
                            <th>Registration No.</th>
                            <th>Type Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DataRow dataRow in Model.Item1.Rows)
                        {
                            <tr>
                                <td>@dataRow["RouteName"].ToString()</td>
                                <td>@dataRow["starting_time"].ToString()</td>
                                <td>@dataRow["Source"].ToString()</td>
                                <td>@dataRow["Destination"].ToString() </td>
                                <td>@String.Format("{0:dd MMM yyyy}", dataRow["Starting_date"])</td>
                                <td>@String.Format("{0:dd MMM yyyy}", dataRow["Ending_date"])</td>
                                <td>@dataRow["RegistrationNumber"].ToString()</td>
                                <td>@dataRow["TypeName"].ToString()</td>
                                <td>
                                    <a type="button" class="btn btn-info" asp-controller="Route" asp-action="RouteAddEdit" asp-route-RouteID="@Convert.ToInt32(dataRow["RouteID"])">Edit</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="RouteStationAddMessage">
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between">
            <h3>Route's Station Detail</h3>
            <div>
                <button type="button" class="btn btn-success btn-add" id="AddNewStation">
                    Add New Station
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Station Order</th>
                            <th>Station Name</th>
                            <th>StationTime</th>
                            <th>Distance</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DataRow dataRow in Model.Item2.Rows)
                        {
                            <tr>
                                <td>@dataRow["StationOrder"].ToString()</td>
                                <td>@dataRow["StationName"].ToString()</td>
                                <td>@dataRow["StationTime"].ToString()</td>
                                <td>@dataRow["DistanceFromOrigin"].ToString() </td>
                                <td>
                                    <a type="button" class="btn btn-info routeStationEditbtn" data-route-id="@Convert.ToInt32(dataRow["RouteID"])" data-route-detail-id="@Convert.ToInt32(dataRow["RouteDetailID"])" @* data-bs-toggle="modal" data-bs-target="#staticBackdrop" *@>Edit</a>
                                    <a type="button" class="btn btn-danger" onclick="confirmDelete('@Convert.ToInt32(dataRow["RouteDetailID"])', '@Convert.ToInt32(dataRow["RouteID"])')">Delete</a>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Modal Station</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <form method="post" id="routeStationForm">

                    <div class="mb-3" hidden>
                        <br />
                        <label class="form-label" for="RouteDetailID">RouteDetailID</label>
                        <input type="text" class="form-control" id="RouteDetailID" name="RouteDetailID" disabled  />
                        <span class="text-danger"></span>
                        <br />
                    </div>

                    <div class="mb-3" hidden>
                        <br />
                        <label class="form-label" for="StationTime">RouteID</label>
                        <input type="text" id="RouteID" name="RouteID" value="@Convert.ToInt32(Context.Request.Query["RouteID"])" disabled  />
                        <span class="text-danger"></span>
                        <br />

                    </div>

                    <div class="mb-3">
                        <label class="form-label" for="RouteStationId">First Station</label>
                        <br />
                        <select class="form-control" id="RouteStationId" name="@nameof(Model.Item3.RouteStationId)" required>
                            <option disabled selected>Select First Station</option>
                            @foreach (var station in ViewBag.Station_DDL)
                            {
                                <option value="@station.Stid">@station.StationName</option>
                            }
                        </select>
                        <span class="text-danger"></span>
                    </div>

                    <!-- StationTime -->
                    <div class="mb-3">
                        <label class="form-label" for="StationTime">StationTime</label>
                        <input type="time" class="form-control" id="StationTime" name="StationTime" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label" for="StationOrder">StationOrder</label>
                        <input type="text" class="form-control" id="StationOrder" name="StationOrder" required />
                        <span class="text-danger"></span>
                    </div>

                    <!-- DistanceFromOrigin -->
                    <div class="mb-3">
                        <label class="form-label" for="DistanceFromOrigin">DistanceFromOrigin</label>
                        <input type="text" class="form-control" id="DistanceFromOrigin" name="DistanceFromOrigin" placeholder="DistanceFromOrigin" required />
                        <span class="text-danger"></span>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-success">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {


            $("#AddNewStation").click(function () {
                $("#RouteDetailID").val('');
                $("#RouteStationId").val('');
                $("#StationTime").val('');
                $("#StationOrder").val('');
                $("#DistanceFromOrigin").val('');
                $('#staticBackdrop').modal('show');

            });

            $(".routeStationEditbtn").click(function () {

                var routeID = $(this).data("route-id");
                var routeDetailID = $(this).data("route-detail-id");

                // $("#RouteID").val('');
                // $("#RouteDetailID").val('');

                $("#RouteID").val(routeID);
                $("#RouteDetailID").val(routeDetailID);

                $.ajax({
                    url: '/Routes/Route/StationEditModelFillDataOfRoute',
                    method: 'GET',
                    data: { RouteID: routeID, RouteDetailID: routeDetailID },
                    success: function (data) {
                        $("#RouteDetailID").val(data.routeDetailID);

                        $("#RouteStationId").val(data.routeStationId);

                        if (typeof data.stationTime === 'string') {
                            // Parse date string and format time
                            var dateTime = new Date(data.stationTime);
                            var timeOnly = dateTime.toLocaleTimeString('en-US', { hour12: false });
                            $("#StationTime").val(timeOnly);
                        }

                        $("#StationOrder").val(data.stationOrder);
                        $("#DistanceFromOrigin").val(data.distanceFromOrigin);

                        $('#staticBackdrop').modal('show');

                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });
            // Submit form using AJAX
            $("#routeStationForm").submit(function (e) {
                e.preventDefault();

                var routeDetailID =      $("#RouteDetailID").val();
                var routeID =            $("#RouteID").val();
                var routeStationId =     $("#RouteStationId").val();
                var stationTime =         $("#StationTime").val();
                var stationOrder =        $("#StationOrder").val();
                var distanceFromOrigin =  $("#DistanceFromOrigin").val();

                var formData = {
                    RouteDetailID: routeDetailID,
                    RouteID: routeID,
                    RouteStationId: routeStationId,
                    StationTime: stationTime,
                    StationOrder: stationOrder,
                    DistanceFromOrigin: distanceFromOrigin
                };
                console.log(formData);
                // Send data to the controller using AJAX
                $.ajax({
                    url: '/Routes/Route/SaveRouteStation',
                    method: 'POST',
                    data: formData,
                    success: function (response) {

                        $("#RouteStationAddMessage").html(`
                                                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                                                    <i class="bi bi-check-circle me-1"></i>
                                                                    New Route Station Added Successfully
                                                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                                                </div>
                                                            `);

                        setTimeout(function () {
                            window.location.reload();
                        }, 1000);

                        $('#staticBackdrop').modal('hide');

                    },
                    error: function (error) {
                        // Handle error, if needed
                        console.error(error);
                    }
                });
            });
        });
    </script>
    <script>
        function confirmDelete(parameter, p2) {
            event.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with deletion
                    $.ajax({
                        url: "@Url.Action("Delete_RouteStation", "Route")" + "?&RouteDetailID=" + parameter,
                        type: "POST",
                        success: function (result) {
                            // Use SweetAlert to show a success message
                            Swal.fire({
                                title: "Deleted!",
                                text: "The Station has been deleted.",
                                icon: "success",
                            }).then(() => {
                                // Redirect to the CityList action
                                window.location.href = "@Url.Action("SelectRoute_By_RouteID", "Route")" + "?RouteID=" + p2;;
                            });
                        },
                        error: function () {
                            // Use SweetAlert to show an error message
                            Swal.fire({
                                title: "Error",
                                text: "An error occurred while deleting the Station.",
                                icon: "error",
                            });
                        },
                    });
                }
            });
        }
    </script>
}