@{
    Layout = "_Layout";
}
@using System.Data;
@model List<Bus_Ticket_Booking_Management_System.Areas.Seat.Models.Seatmodel>

<head>
    <title>Bus Seat Selection</title>
    <style>
        .seat-container {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
            text-align: center;
            justify-content: center;
        }

        .seat {
            width: 70px; /* Adjust width for chair shape */
            height: 100px; /* Adjust height for chair shape */
            border: 2px solid #3498db;
            background-color: #e0e0e0;
            font-size: 18px;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            position: relative;
            border-radius: 8px; /* Add border radius for rounded corners */
            overflow: hidden; /* Hide overflow to prevent content from protruding */
        }

            .seat::before {
                content: '';
                position: absolute;
                width: 100%;
                height: 60%;
                background-color: #e0e0e0;
                border-top-left-radius: 50%;
                border-top-right-radius: 50%;
                bottom: 0;
                left: 0;
                transform: translateY(50%); /* Move down by half of its height */
            }

            .seat::after {
                content: '';
                position: absolute;
                width: 100%;
                height: 10px;
                background-color: #3498db; /* Add a different color for the seat cushion */
                bottom: 0;
                left: 0;
                border-bottom-left-radius: 8px;
                border-bottom-right-radius: 8px;
            }

        .selected {
            background-color: #3498db;
            color: #fff;
        }

        .unavailable {
            background-color: #666666;
            color: #000000;
            cursor: not-allowed;
        }

        .card-footer {
            text-align: center;
        }

        input[type="text"], input[type="number"], input[type="email"] {
            width: 50%;
        }
    </style>
</head>



<div class="pagetitle">
    <h1>Seat</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
            <li class="breadcrumb-item active">Seat Layout</li>
        </ol>
    </nav>
</div>
<body>
    @*     <div class="container mt-5">
    <div class="row justify-content-center">
    <div class="col">
    <div class="card">
    <div class="row">
    <div class="col text-start text-dark mb-1">
    <b class="bg-info p-1 rounded">@@Model.BusTypeName</b>
    </div>
    <div class="col text-end mt-1 text-dark">
    <b class="bg-info p-1 rounded">INR @@Model.Fare</b>
    </div>
    </div>

    <div class="container text-center">
    <div class="row pt-2">
    <div class="col">
    <div class="row mb-2"><b>Date</b></div>
    <div class="row mb-2"><h6>01-01-2024</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>TripCode</b></div>
    <div class="row mb-2"><h6>@@Model.TripCode</h6></div>
    </div>
    <div class="col" hidden id="routeid">
    <div class="row mb-2"><b>routeid</b></div>
    <div class="row mb-2"><h6>@@Model.routeid</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>Dept.Time</b></div>
    <div class="row mb-2"><h6>@@Model.DeptTime</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>Origin</b></div>
    <div class="row mb-2"><h6>@@Model.Origin</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>Arrival Time</b></div>
    <div class="row mb-2"><h6>@@Model.ArrivalTime</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>Destination</b></div>
    <div class="row mb-2"><h6>@@Model.Destination</h6></div>
    </div>
    <div class="col">
    <div class="row mb-2"><b>Duration</b></div>
    <div class="row mb-2"><h6>@@Model.Duration</h6></div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    *@
    <div class="container mt-5" id="seatlayout">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title text-center">Bus Seat Selection</h5>
                    </div>
                    <div class="card-body">
                        <div id="seat-map" class="seat-container">
                            @foreach (var item in Model)
                            {
                                <div class="seat @(item.isAvailable == 0 ? "unavailable": "")"
                                     onclick="toggleSeat(this, @item.isAvailable,@item.roueSeatID)">
                                    <h1 hidden id="SeatID">@item.SeatID</h1>
                                    <h1 id="RoueSeatID">@item.roueSeatID</h1>
                                    <h1 hidden>@item.isAvailable</h1>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <button id="bookButton" class="btn btn-primary" onclick="bookSeats()">Book Selected Seats</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card" id="formdivtag" style="display: none;">
        <div class="card-header d-flex justify-content-between">
            <h3 class="text-dark">Passenger Details</h3>
        </div>
        @* onsubmit="submitPassengerdetails(event)" *@
        <form id="passengerDetailForm" class="ms-3" method="POST" asp-action="Payment" asp-controller="Payment">
            <!-- Update the ID here -->
            <div class="card-body">
                @await Html.PartialAsync("_PassengerDetailsForm", Model)
            </div>

        </form>

    </div>

    <!-- Modal -->
    <div class="modal modal-lg" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-light">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel"><i class="bi bi-check-circle-fill" id="message"></i> </h1>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="origatdata">
                    <div class="row">
                        <div class="col-md-6">
                            <p><i class="bi bi-card-text"></i> <strong>Ticket ID:</strong> <span id="ticketId"></span></p>
                            <p><i class="bi bi-geo-alt"></i> <strong>Route Code:</strong> <span id="routename"></span></p>

                            <p><i class="bi bi-person"></i> <strong>Passenger Name:</strong> <span id="psgname"></span></p>
                            <p><i class="bi bi-envelope"></i> <strong>Email ID:</strong> <span id="email"></span></p>
                            <p><i class="bi bi-telephone"></i> <strong>Mobile No:</strong> <span id="mobileNo"></span></p>
                            <p><i class="bi bi-geo-alt"></i> <strong>Source:</strong> <span id="source"></span></p>
                            <p><i class="bi bi-geo-alt"></i> <strong>Destination:</strong> <span id="destination"></span></p>
                        </div>
                        <div class="col-md-6">
                            <p><i class="bi bi-calendar3"></i> <strong>Departure Date:</strong> <span id="departureDate"></span></p>
                            <p><i class="bi bi-clock"></i> <strong>Departure Time:</strong> <span id="departureTime"></span></p>
                            <p><i class="bi bi-clock"></i> <strong>Arrival Time:</strong> <span id="arrivalTime"></span></p>
                            <p><i class="bi bi-patch-check"></i> <strong>Booked Seat:</strong> <span id="bookedSeat"></span></p>
                            <p><i class="bi bi-currency-dollar"></i> <strong>Fare:</strong> <span id="ticketfare"></span></p>
                            <p><i class="bi bi-calendar2-check"></i> <strong>Transaction Date:</strong> <span id="transactionDate"></span></p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-download-ticket" onclick="printdata()"><i class="bi bi-download"></i> Download Ticket</button>
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal"><i class="bi bi-check-circle-fill"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="loadingSpinner" class="modal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered modal-sm">
            <div class="modal-content">
                <div class="modal-body text-center">
                    <div class="d-flex align-items-center justify-content-center">
                        <div class="spinner-border mr-2" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mb-0">   Loading...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>

    <script>
        // $(document).ready(function () {
        //     $("#passengerDetailForm").submit(function (event) {
        //         // Prevent default form submission
        //         event.preventDefault();
        //         var actualfare = $('#actualfare').text();
        //         alert(actualfare);
        //         $.ajax({
        //             url: '@Url.Action("Payment", "Payment")', // Replace with your actual URL
        //             type: 'POST', // or 'GET' based on your requirement
        //             data: { fare: actualfare },
        //             success: function (response) {
        //                 // Handle success response here
        //                 console.log(response);
        //             },
        //             error: function (xhr, status, error) {
        //                 // Handle error response here
        //                 console.error(xhr.responseText);
        //             }
        //         });
        //     });
        // });

        function rtnfare() {
            return $('#actualfare').text();
        }
        function printdata() {
            var printDiv = document.getElementById("origatdata");
            var contentToPrint = printDiv.innerHTML;

            var printWindow = window.open('', '', 'left=0, top=0, width=800, height=500, toolbar=0, scrollbars=0, status=0');
            printWindow.document.write(printDiv.innerHTML);
            contentToPrint = contentToPrint.replace('<div class="modal-footer"> < button type = "button" class= "btn btn-primary btn-download-ticket" onclick = "printdata()" > <i class="bi bi-download" > </i> Download Ticket</button ><button type="button" class= "btn btn-success" data - bs - dismiss="modal" > <i class="bi bi-check-circle-fill" > </i> Close</button ></div>', '');

            var printWindow = window.open('', '', 'left=0, top=0, width=800, height=500, toolbar=0, scrollbars=0, status=0');
            printWindow.document.write(contentToPrint);
            printWindow.document.close();

            // Focus and print the window
            printWindow.focus();
            printWindow.print();
        }

        function getQueryParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(name);
        }
        function decodeParamsFromBase64(encodedParams) {
            return JSON.parse(atob(encodedParams));
        }

        function submitPassengerdetails(event) {
            event.preventDefault(); // Prevent the default form submission
            $('#loadingSpinner').show();

            var passengerName = $("#passengerDetailForm input[name='passengerName']").val();
            var mobileNo = $("#passengerDetailForm input[name='MobileNo']").val();
            var emailID = $("#passengerDetailForm input[name='EmailID']").val();

            var routeId = getQueryParam('routeId');
            var date = getQueryParam('onDate');
            var sourceID = getQueryParam('sourceID');
            var destinationID = getQueryParam('destinationID');
            var fare = getQueryParam('fare');

            // Call payment action method first
            $.ajax({
                url: "/Payment/Payment",
                type: 'POST',
                data: {
                    PassengerName: passengerName,
                    MobileNo: mobileNo,
                    EmailID: emailID,
                    routeId: routeId,
                    onDate: date,
                    sourceID: sourceID,
                    destinationID: destinationID,
                    fare: fare,
                    selectedSeats: selectedSeatsData.map(seat => seat.roueSeatID).join(',')
                },
                success: function (paymentResponse) {
                    // Payment successful, now proceed to submit passenger details
                    $.ajax({
                        url: "/Seat/submitPassengerDetails",
                        type: 'POST',
                        data: {
                            PassengerName: passengerName,
                            MobileNo: mobileNo,
                            EmailID: emailID,
                            routeId: routeId,
                            onDate: date,
                            sourceID: sourceID,
                            destinationID: destinationID,
                            fare: fare,
                            selectedSeats: selectedSeatsData.map(seat => seat.roueSeatID).join(',')
                        },
                        success: function (data) {
                            // Handle passenger details submission success
                            console.log(data);
                            // Additional handling...
                        },
                        error: function (error) {
                            // Handle passenger details submission error
                            console.error("Error submitting passenger details:", error);
                            // Additional error handling...
                        }
                    });
                },
                error: function (paymentError) {
                    // Handle payment error
                    console.error("Error in payment:", paymentError);
                    // Additional error handling...
                }
            });
        }

        var selectedSeatsData = [];

        function toggleSeat(seat, isAvailable, roueSeatID) {
            // Check if the seat is available before toggling
            if (isAvailable > 0) {
                $(seat).toggleClass("selected");

                // Update selectedSeatsData array with RoueSeatID
                updateSelectedSeatsData(roueSeatID, $(seat).hasClass("selected"));

            }
        }

        function updateSelectedSeatsData(roueSeatID, isSelected) {
            // Check if the seat is already in the array
            var seatIndex = selectedSeatsData.findIndex(function (seatData) {
                return seatData.roueSeatID === roueSeatID;
            });

            // If seat is not in the array and is selected, add it to the array
            if (isSelected && seatIndex === -1) {
                selectedSeatsData.push({
                    roueSeatID: roueSeatID
                });
            }
            // If seat is in the array and is not selected, remove it from the array
            else if (!isSelected && seatIndex !== -1) {
                selectedSeatsData.splice(seatIndex, 1);
            }

        }

        function displayPassengerDetailsForm(a, b) {
            var selectedSeats = $(".selected");
            var numberOfSelectedSeats = selectedSeatsData.length;

            if (numberOfSelectedSeats > 0) {

                $("#formdivtag").show();
                var postData = {
                    selectedSeats: JSON.stringify(selectedSeatsData) // Convert the array to JSON string
                };

                $.ajax({
                    url: '/Seat/RenderPassengerDetailsForm', // Replace with your controller and action
                    type: 'POST',
                    data: postData,
                    success: function (data) {
                        $("#passengerDetailForm").html(data);
                        $("#passengerDetailForm").append('<button type="submit" class="btn btn-primary">Submit Passenger Details</button>');
                        $("#selectedSeatCount").text(a);
                        $("#selectedSeatIDs").text(b);
                        $("#actualfare").text(decodeParamsFromBase64(getQueryParam('fare')) * a);

                        $("#fareamount").text(decodeParamsFromBase64(getQueryParam('fare')) + ' * ' + a + ' = ' + decodeParamsFromBase64(getQueryParam('fare')) * a);
                    },
                    error: function (error) {
                        console.error(error);
                        alert("Error loading passenger details form.");
                    }
                });
            } else {
                $("#formdivtag").hide();
                alert("Please select at least one seat before entering passenger details.");
            }
        }

        function bookSeats() {
            var selectedSeats = $(".selected");
            var selectedSeats = $(".selected");
            var numberOfSelectedSeats = selectedSeatsData.length;

            if (selectedSeats.length === 0) {
                alert("Please select at least one seat.");
            } else if (selectedSeats.length > 3) {
                alert("Maximum 3 seats allowed.");
            } else {

                var selectedSeatIDs = selectedSeats.map(function () {
                    return $(this).find("#SeatID").text();
                }).get();

                $.ajax({
                    url: '/Seat/UpdateSlectedSeatStatus',
                    type: 'POST',
                    data: { seatIDs: selectedSeatIDs },
                    success: function (data) {
                        $("#seatlayout").hide();
                        var a = selectedSeatsData.length;
                        var b = selectedSeatsData.map(seat => seat.roueSeatID).join(',');
                        displayPassengerDetailsForm(a, b);


                    },
                    error: function (error) {
                        // Handle error response from the server
                        console.log(error);
                        alert("Error during booking.");
                    }
                });

            }
        }

    </script>
}
